definitions:
  controllers.HealthCheckResponse:
    properties:
      database:
        type: boolean
    type: object
  models.ArticleModel:
    description: A model that describes an article
    properties:
      articleId:
        type: string
      contentUrl:
        type: string
      created:
        type: string
      description:
        type: string
      documentRef:
        type: string
      slug:
        type: string
      thumbnailUrl:
        type: string
      title:
        type: string
      updated:
        type: string
    type: object
  models.CreateArticleContentResponse:
    properties:
      contentId:
        type: string
      thumbnailId:
        type: string
    type: object
  models.CreateArticleRequest:
    description: New article request
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  models.CreateUserRequest:
    description: New user request
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.LoginUserRequest:
    description: Login user request
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.UserSessionModel:
    description: A model that describes a user session
    properties:
      id:
        type: string
      loggedIn:
        type: string
      username:
        type: string
    type: object
  models.UserStatusModel:
    description: User status model
    properties:
      active:
        type: boolean
      loggedInSince:
        type: string
      username:
        type: string
    type: object
  util.ApiResponse-array_models_ArticleModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.ArticleModel'
        type: array
      error:
        type: string
      message:
        type: string
    type: object
  util.ApiResponse-controllers_HealthCheckResponse:
    properties:
      data:
        $ref: '#/definitions/controllers.HealthCheckResponse'
      error:
        type: string
      message:
        type: string
    type: object
  util.ApiResponse-models_ArticleModel:
    properties:
      data:
        $ref: '#/definitions/models.ArticleModel'
      error:
        type: string
      message:
        type: string
    type: object
  util.ApiResponse-models_CreateArticleContentResponse:
    properties:
      data:
        $ref: '#/definitions/models.CreateArticleContentResponse'
      error:
        type: string
      message:
        type: string
    type: object
  util.ApiResponse-models_UserSessionModel:
    properties:
      data:
        $ref: '#/definitions/models.UserSessionModel'
      error:
        type: string
      message:
        type: string
    type: object
  util.ApiResponse-models_UserStatusModel:
    properties:
      data:
        $ref: '#/definitions/models.UserStatusModel'
      error:
        type: string
      message:
        type: string
    type: object
  util.ApiResponse-string:
    properties:
      data:
        type: string
      error:
        type: string
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /article:
    post:
      consumes:
      - application/json
      description: Create article
      parameters:
      - description: Create article model object
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/models.CreateArticleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.ApiResponse-string'
      summary: Create article
      tags:
      - Create article
  /article/{articleId}/content:
    post:
      consumes:
      - application/json
      description: Upload article content
      parameters:
      - description: Article Identifier
        in: path
        name: articleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.ApiResponse-models_CreateArticleContentResponse'
      summary: Upload article content
      tags:
      - Upload article content
  /article/{slug}:
    get:
      consumes:
      - application/json
      description: Get article by slug
      parameters:
      - description: Article slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.ApiResponse-models_ArticleModel'
      summary: Get article by slug
      tags:
      - Get article by slug
  /articles:
    get:
      consumes:
      - application/json
      description: Get articles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.ApiResponse-array_models_ArticleModel'
      summary: Get articles
      tags:
      - Get articles
  /gemini:
    get:
      consumes:
      - application/json
      description: Query gemini
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.ApiResponse-string'
      summary: Query gemini via gRPC
      tags:
      - Query gemini
  /healthz:
    get:
      consumes:
      - application/json
      description: HealthCheck
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.ApiResponse-controllers_HealthCheckResponse'
      summary: HealthCheck
      tags:
      - HealthCheck
  /login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: Login user model object
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.ApiResponse-string'
      summary: Login user
      tags:
      - Login user
  /ping:
    get:
      consumes:
      - application/json
      description: Ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Ping
      tags:
      - Ping
  /sessions:
    get:
      consumes:
      - application/json
      description: Get user sessions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.ApiResponse-models_UserSessionModel'
      summary: Get user sessions
      tags:
      - Get user sessions
  /status:
    get:
      consumes:
      - application/json
      description: Get user status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.ApiResponse-models_UserStatusModel'
      summary: Get user status
      tags:
      - Get user status
  /user:
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: Create user model object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.ApiResponse-string'
      summary: Create user
      tags:
      - Create user
swagger: "2.0"
